import java.util.Scanner;

/*
* StringFun.java
* Author: Sam Bloodworth
* Submission Date: 3/2/2018
*
* Purpose: The program manipulates strings through several
* basic commands given by the user.
*
* Statement of Academic Honesty:
*
* The following code represents my own work. I have neither
* received nor given inappropriate assistance. I have not copied
* or modified code from any source other than the course webpage
* or the course textbook. I recognize that any unauthorized
* assistance or plagiarism will be handled in accordance with
* the University of Georgia's Academic Honesty Policy and the
* policies of this course. I recognize that my work is based
* on an assignment created by the Department of Computer
* Science at the University of Georgia. Any publishing
* or posting of source code for this project is strictly
* prohibited unless you have written consent from the Department
* of Computer Science at the University of Georgia.
*/

public class StringFun {

	public static void main(String[] args) {
		Scanner keyboard = new Scanner(System.in);
		
		System.out.println("Enter the string to be manipulated");
		
		String string = keyboard.nextLine();
		
		boolean mod = true;
		
		
		while (mod == true) {
			
			System.out.println("Enter your command (quit, print reverse, replace all, replace single, remove)");
			String command = keyboard.nextLine();
			
			if (command.equalsIgnoreCase("print reverse")) {
				String newString = "";
				for(int count = string.length() - 1; count >= 0; count--) {
					newString = newString + string.charAt(count);
				}
				System.out.println(newString);
			}else if(command.equalsIgnoreCase("replace all")) {
				String newString = "";
				System.out.println("Enter the character to replace");
				char oldChar = keyboard.nextLine().charAt(0);
				System.out.println("Enter the new character");
				char newChar = keyboard.nextLine().charAt(0);
				boolean work1 = false;
				for (int count = 0; count <= string.length() - 1; count++) {
					if (string.charAt(count) == oldChar) {
						newString = newString + newChar;
						work1 = true;
					}else {
						newString = newString + string.charAt(count);
					}
				}
				if (work1 == true) {
					string = newString;
					System.out.println("The new sentence is: " + string);
				}else {
					System.out.println("Error. The character you were attempting to replace does not exist in the sentence.");
				}
			}else if (command.equalsIgnoreCase("replace single")) {
				boolean work = false;
				System.out.println("Enter the character to replace");
				char oldChar = keyboard.nextLine().charAt(0);
				System.out.println("Enter the new character");
				char newChar = keyboard.nextLine().charAt(0);
				System.out.println("Which " + oldChar + " would you like to replace?");
				char number = keyboard.nextLine().charAt(0);
				if (Character.isDigit(number)) {
					String newString = "";
					int actualNumber = Character.getNumericValue(number);
					for (int count = 0, otherCount = 1; count <= string.length() -1; count++ ) {
						if ((otherCount == actualNumber) && (string.charAt(count) == oldChar)) {
							newString = newString + newChar;
							otherCount++;
							work = true;
						}else if(string.charAt(count) == oldChar) {
							newString = newString + string.charAt(count);
							otherCount++;
						}else {
							newString = newString + string.charAt(count);
						}
					}
					string = newString;
				}else {
					System.out.println("Error. The index you entered is not a number.");
				}
				if (work == false){
					System.out.println("Error. The instance of the character you were trying to replace does not exist.");
				}else {
					System.out.println("The new sentence is: " + string);
				}
			}else if(command.equalsIgnoreCase("quit")) {
				mod = false;
			}else if (command.equalsIgnoreCase("remove")) {
				System.out.println("Enter the character to remove");
				char removedChar = keyboard.nextLine().charAt(0);
				boolean working = false;
				for(int count = 0; count <= string.length() -1; count++) {
					if (string.charAt(count) == removedChar) {
						string = string.substring(0,string.indexOf(string.charAt(count))) + string.substring(string.lastIndexOf(string.charAt(count)) + 1);
						System.out.println("The new sentence is: " + string);
						working = true;
						break;
					}else {
						string = string;
					}
				}
				if(working == false) {
					System.out.println("Error. The character you were trying to replace does not exist in the sentence.");
				}
			}else {
				System.out.println("Error. Invalid Command.");
			}
			
			
			
		}
				
	}

}
